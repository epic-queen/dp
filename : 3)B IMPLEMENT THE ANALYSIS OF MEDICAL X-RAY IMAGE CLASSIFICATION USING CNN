import matplotlib.pyplot as plt	#For Visualization
import numpy as np	#For handling arrays
import pandas as pd	# For handling data

#Define Directories for train, test & Validation Set
train_path ='D://Babisha//train'
test_path ='D://Babisha//test'
valid_path ='D://Babisha//val'
batch_size = 16

#The dimension of the images we are going to define is 500x500 img_height = 500
img_width = 500
from tensorflow.keras.preprocessing.image import ImageDataGenerator

# Create Image Data Generator for Train Set
image_gen = ImageDataGenerator(
 
            rescale = 1./255,
            shear_range = 0.2,
            zoom_range = 0.2, 
            horizontal_flip = True, )
test_data_gen = ImageDataGenerator(rescale = 1./255) 
train = image_gen.flow_from_directory(
        train_path,
        target_size=(99, 128),
        color_mode='grayscale', 
        class_mode='binary',
        batch_size=batch_size)
test = test_data_gen.flow_from_directory( 
    test_path,
    target_size=(99, 128),  
    color_mode='grayscale',
    shuffle=False,

#setting shuffle as False just so we can later compare it with predicted values without having indexing problem
    class_mode='binary',
    batch_size=batch_size)
valid = test_data_gen.flow_from_directory( 
    valid_path,
    target_size=(99,128),
    color_mode='grayscale',
    class_mode='binary', 
    batch_size=batch_size)
plt.figure(figsize=(12, 12))
for i in range(0, 10):
    plt.subplot(2, 5, i+1)
    for X_batch, Y_batch in train:
        image = X_batch[0]
        dic = {0:'NORMAL', 1:'PNEUMONIA'}
        plt.title(dic.get(Y_batch[0]))
        plt.axis('off') 
        plt.imshow(np.squeeze(image),cmap='gray',interpolation='nearest') 
        break
plt.tight_layout() 
plt.show()
